import telegram
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from .. import translations
from ..services.user import update_user_info
from ..utils.time_utils import is_order_time
from .order import MENU
from ..services.sheets import get_dishes_for_meal

async def start(update: telegram.Update, context: telegram.ext.ContextTypes.DEFAULT_TYPE):
    """–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º."""
    context.user_data.clear()
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user = update.effective_user
    await update_user_info(user)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –¥–ª—è –∑–∞–∫–∞–∑–∞
    can_order = is_order_time()
    make_order_button = InlineKeyboardButton(
        translations.get_button('make_order'), 
        callback_data='new_order'
    ) if can_order else InlineKeyboardButton(
        translations.get_button('make_order') + ' ‚õî', 
        callback_data='order_time_error'
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    keyboard = [
        [make_order_button],
        [InlineKeyboardButton(translations.get_button('my_orders'), callback_data='my_orders')],
        [InlineKeyboardButton(translations.get_button('tomorrow_menu'), callback_data='tomorrow_menu')],
        [InlineKeyboardButton(translations.get_button('ask_question'), callback_data='question')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(translations.get_message('welcome'), reply_markup=reply_markup)
    return MENU

async def show_tomorrow_menu(update: telegram.Update, context: telegram.ext.ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –Ω–∞ –∑–∞–≤—Ç—Ä–∞."""
    query = update.callback_query
    await query.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º –±–ª—é–¥–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏
    breakfast_dishes = get_dishes_for_meal('breakfast')
    lunch_dishes = get_dishes_for_meal('lunch')
    dinner_dishes = get_dishes_for_meal('dinner')
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
    message = "üçΩ *–ú–µ–Ω—é –Ω–∞ –∑–∞–≤—Ç—Ä–∞*\n\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≤—Ç—Ä–∞–∫
    message += "üç≥ *–ó–∞–≤—Ç—Ä–∞–∫:*\n"
    if breakfast_dishes:
        for dish, price in breakfast_dishes:
            message += f"‚Ä¢ {dish} - {price} —Ä.\n"
    else:
        message += "–ú–µ–Ω—é –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±–µ–¥
    message += "\nüç≤ *–û–±–µ–¥:*\n"
    if lunch_dishes:
        for dish, price in lunch_dishes:
            message += f"‚Ä¢ {dish} - {price} —Ä.\n"
    else:
        message += "–ú–µ–Ω—é –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º —É–∂–∏–Ω
    message += "\nüçΩ *–£–∂–∏–Ω:*\n"
    if dinner_dishes:
        for dish, price in dinner_dishes:
            message += f"‚Ä¢ {dish} - {price} —Ä.\n"
    else:
        message += "–ú–µ–Ω—é –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
    keyboard = [
        [InlineKeyboardButton(translations.get_button('make_order'), callback_data='new_order')],
        [InlineKeyboardButton(translations.get_button('my_orders'), callback_data='my_orders')],
        [InlineKeyboardButton(translations.get_button('ask_question'), callback_data='question')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(message, reply_markup=reply_markup, parse_mode='Markdown')
    return MENU 